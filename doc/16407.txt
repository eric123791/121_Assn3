{"text": "ICS 46 Spring 2 14 News Course Reference Schedule Project Guide Code Examples About Alex ICS 46 Spring 2 14 Schedule All assigned readings are from the optional Goodrich text It is a good idea to skim the assigned reading before the lecture for the main ideas attend lecture and then to go through the assigned reading again to fill in the details that you missed both in your initial skim of the reading and in the lecture Several lectures have litle or no reading corresponding to them In some cases this is because a block of reading corresponds to more than one lecture In other cases the material covered in that lecture is not discussed in the textbook DateLecture TopicsReadingsProject WorkWeek 1Tu 4 1 Course introductionSome necessary additional C backgroundTemplate functions and template classesWhy templates must be written in header files Th 4 3 ContractsPreconditions and postconditionsClass invariantsExceptions and exception safetyWhy exceptions affect design so profoundly in C The resource acquisition is initialization RAII technique in C Smart pointers as an RAII technique for memory management std shared ptr std unique ptr and std weak ptr Ch 2 some is review Using C 11 s Smart Pointers Week 2M 4 7Project due 11 59pmTu 4 8 Smart pointers continued Multidimensional arrays briefly Options for storing multidimensional data in C Recursion briefly Managing parameters and results in recursion in C Ch 3 1Ch 3 5 Th 4 1 O and notationBest worst and average case analysisVariations on linked listsAnalyzing linked list variations using O and notationStacks queues and deques Ch 4Ch 5 Week 3Tu 4 15 Alternative forms of algorithm analysisAmortized analysis briefly Why std vector s reallocations aren t as bad as you might think Th 4 17 Random number generation in C 11Random devices random engines and random distributionsAnalyzing the performance of recursionRecurrences Random Number Generation in C 11 Week 4M 4 21Project 1 due 11 59pmTu 4 22 General treesGeneral tree implementation briefly Ch 7 1 Th 4 24 An in depth look at Project 2Breadth first tree traversalsDepth first tree traversals preorder and postorder Comparing the performance time and memory of tree traversals Ch 7 2 Week 5Tu 4 29 N ary and binary treesInternal vs external nodesBinary search treesThe importance of keeping binary search trees balancedWhat is a good balance condition Ch 7 3Ch 1 1 Th 5 1 AVL treesSkip lists Ch 1 2Ch 9 4 Week 6M 5 5Project 2 due 11 59pmTu 5 6 Skip lists continued Probabilistic analysis briefly Priority queues briefly Implementing a priority queue using a min heap or max heap Ch 8 1 8 3 Th 5 8 MIDTERM regular lecture time and location Week 7Tu 5 13 Implementing a priority queue using a min heap or max heap continued Hashing and hash tablesSeparate chaining Good hash functionsOpen addressingLinear probingHashing objects other than numbers Ch 9 2 Th 5 15 Graphs definition and terminologyDirected graphsDirected acyclic graphs DAGs Undirected graphs Ch 13 1 Week 8Tu 5 2 Graph implementation trade offsAdjacency lists vs adjacency matrix implementationsDepth first graph traversalBreadth first graph traversal Ch 13 2 13 3 Th 5 22 Why connectedness is an important factor in a graphConnectedness of a graphStrong connectedness vs weak connectedness Week 9M 5 26University Holiday Memorial DayTu 5 27 Dijkstra s shortest path algorithmTopological ordering of a DAGThe sorting problemWhat can and cannot be sortedSorting in O n2 timeInsertion sort Ch 13 5 Th 5 29 Binary insertion sortSelection sortSorting in O n log n timeTreesortHeapsortDivide and conquer algorithms briefly Quicksort Ch 11 2 Su 6 1Project 3 due 11 59pmWeek 1 Tu 6 3 MergesortA lower bound for comparison based sortingModeling comparison based sorts using decision treesHow to sort in linear time by using techniques other than comparisonsCounting sort Ch 11 1Ch 11 3 Th 6 5 Radix sortWhy radix sort can run in linear time i e linear with respect to what Equivalence classsesThe Union Find algorithmParent pointer based trees as a Union Find implementation technique Ch 11 4 Su 6 8Project 4 due 11 59pmFinals WeekTh 6 12 FINAL EXAM 4 pm 6 pm DBH 11 ", "_id": "http://www.ics.uci.edu/~thornton/ics46/Schedule.html", "title": "ics 46 spring 2014, schedule", "html": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!DOCTYPE html PUBLIC\r\n \"-//W3C//DTD XHTML 1.1//EN\"\r\n \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\r\n\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\r\n\r\n<head>\r\n<meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\" />\r\n<link rel=\"stylesheet\" href=\"course.css\" type=\"text/css\" />\r\n\r\n<title>ICS 46 Spring 2014, Schedule</title>\r\n</head>\r\n\r\n<body>\r\n\r\n<div class=\"navbar\">\r\n\r\n<p>\r\nICS 46 Spring 2014 |\r\n<a href=\"index.html\">News</a> |\r\n<a href=\"CourseReference.html\">Course Reference</a> |\r\n<a href=\"Schedule.html\">Schedule</a> |\r\n<a href=\"ProjectGuide\">Project Guide</a> |\r\n<a href=\"CodeExamples\">Code Examples</a> |\r\n<a href=\"http://www.ics.uci.edu/~thornton/\">About Alex</a>\r\n</p>\r\n\r\n<hr />\r\n\r\n</div>\r\n\r\n<div class=\"header\">\r\n\r\n<p>ICS 46 Spring 2014<br />\r\n   Schedule</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p>All assigned readings are from the (optional) Goodrich text. It is a good idea to skim the assigned reading before the lecture for the main ideas, attend lecture, and then to go through the assigned reading again to fill in the details that you missed, both in your initial skim of the reading and in the lecture.</p>\r\n\r\n<p>Several lectures have litle or no reading corresponding to them. In some cases, this is because a block of reading corresponds to more than one lecture. In other cases, the material covered in that lecture is not discussed in the textbook.</p>\r\n\r\n<table class=\"normal\">\r\n  <tr class=\"top\">\r\n    <td>Date</td>\r\n    <td>Lecture Topics</td>\r\n    <td>Readings</td>\r\n    <td>Project Work</td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Week 1</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Tu 4/1</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Course introduction</li>\r\n        <li>Some necessary, additional C++ background</li>\r\n        <li>Template functions and template classes</li>\r\n        <li>Why templates must be written in header files</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 4/3</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Contracts</li>\r\n        <li>Preconditions and postconditions</li>\r\n        <li>Class invariants</li>\r\n        <li>Exceptions and exception safety</li>\r\n        <li>Why exceptions affect design so profoundly in C++</li>\r\n        <li>The \"resource acquisition is initialization\" (RAII) technique in C++</li>\r\n        <li>Smart pointers (as an RAII technique for memory management)</li>\r\n        <li><b>std::shared_ptr</b>, <b>std::unique_ptr</b>, and <b>std::weak_ptr</b></li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 2 (some is review)</li>\r\n        <li><a href=\"http://www.umich.edu/~eecs381/handouts/C++11_smart_ptrs.pdf\">Using C++11's Smart Pointers</a></li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Week 2</td>\r\n  </tr>\r\n  <tr>\r\n    <td>M 4/7</td>\r\n    <td></td>\r\n    <td></td>\r\n    <td><a href=\"ProjectGuide/Project0\">Project #0</a> due 11:59pm</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Tu 4/8</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Smart pointers (continued)</li>\r\n        <li>Multidimensional arrays (briefly)</li>\r\n        <li>Options for storing multidimensional data in C++</li>\r\n        <li>Recursion (briefly)</li>\r\n        <li>Managing parameters and results in recursion in C++</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 3.1</li>\r\n        <li>Ch. 3.5</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 4/10</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li><i>O</i>-, &Omega;-, and &Theta;-notation</li>\r\n        <li>Best-, worst-, and average-case analysis</li>\r\n        <li>Variations on linked lists</li>\r\n        <li>Analyzing linked list variations using <i>O</i>-, &Omega;-, and &Theta;-notation</li>\r\n        <li>Stacks, queues, and deques</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 4</li>\r\n        <li>Ch. 5</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Week 3</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Tu 4/15</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>\"Alternative\" forms of algorithm analysis</li>\r\n        <li>Amortized analysis (briefly)</li>\r\n        <li>Why <b>std::vector</b>'s reallocations aren't as bad as you might think</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 4/17</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Random number generation in C++11</li>\r\n        <li>Random devices, random engines, and random distributions</li>\r\n        <li>Analyzing the performance of recursion</li>\r\n        <li>Recurrences</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3551.pdf\r\n\">Random Number Generation in C++11</a></li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Week 4</td>\r\n  </tr>\r\n  <tr>\r\n    <td>M 4/21</td>\r\n    <td></td>\r\n    <td></td>\r\n    <td><a href=\"ProjectGuide/Project1\">Project #1</a> due 11:59pm</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Tu 4/22</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>General trees</li>\r\n        <li>General tree implementation (briefly)</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 7.1</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 4/24</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>An in-depth look at <a href=\"ProjectGuide/Project2\">Project #2</a></li>\r\n        <li>Breadth-first tree traversals</li>\r\n        <li>Depth-first tree traversals (preorder and postorder)</li>\r\n        <li>Comparing the performance (time and memory) of tree traversals</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 7.2</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Week 5</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Tu 4/29</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>N-ary and binary trees</li>\r\n        <li>Internal vs. external nodes</li>\r\n        <li>Binary search trees</li>\r\n        <li>The importance of keeping binary search trees balanced</li>\r\n        <li>What is a \"good\" balance condition?</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 7.3</li>\r\n        <li>Ch. 10.1</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 5/1</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>AVL trees</li>\r\n        <li>Skip lists</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 10.2</li>\r\n        <li>Ch. 9.4</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Week 6</td>\r\n  </tr>\r\n  <tr>\r\n    <td>M 5/5</td>\r\n    <td></td>\r\n    <td></td>\r\n    <td><a href=\"ProjectGuide/Project2\">Project #2</a> due 11:59pm</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Tu 5/6</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Skip lists (continued)</li>\r\n        <li>Probabilistic analysis (briefly)</li>\r\n        <li>Priority queues (briefly)</li>\r\n        <li>Implementing a priority queue using a min heap or max heap</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 8.1 - 8.3</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 5/8</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li><b>MIDTERM &mdash; regular lecture time and location</b></li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Week 7</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Tu 5/13</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Implementing a priority queue using a min heap or max heap (continued)</li>\r\n        <li>Hashing and hash tables</li>\r\n        <li>Separate chaining</li>\r\n        <li>\"Good\" hash functions</li>\r\n        <li>Open addressing</li>\r\n        <li>Linear probing</li>\r\n        <li>Hashing objects other than numbers</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 9.2</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 5/15</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Graphs: definition and terminology</li>\r\n        <li>Directed graphs</li>\r\n        <li>Directed acyclic graphs (DAGs)</li>\r\n        <li>Undirected graphs</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 13.1</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Week 8</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Tu 5/20</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Graph implementation trade-offs</li>\r\n        <li>Adjacency lists vs. adjacency matrix implementations</li>\r\n        <li>Depth-first graph traversal</li>\r\n        <li>Breadth-first graph traversal</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 13.2 - 13.3</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 5/22</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Why connectedness is an important factor in a graph</li>\r\n        <li>Connectedness of a graph</li>\r\n        <li>Strong connectedness vs. weak connectedness</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Week 9</td>\r\n  </tr>\r\n  <tr>\r\n    <td>M 5/26</td>\r\n    <td><b>University Holiday: Memorial Day</td>\r\n    <td></td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Tu 5/27</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Dijkstra's shortest path algorithm</li>\r\n        <li>Topological ordering of a DAG</li>\r\n        <li>The sorting problem</li>\r\n        <li>What can and cannot be sorted</li>\r\n        <li>Sorting in <i>O</i>(<i>n</i><sup><small>2</small></sup>) time</li>\r\n        <li>Insertion sort</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 13.5</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 5/29</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Binary insertion sort</li>\r\n        <li>Selection sort</li>\r\n        <li>Sorting in <i>O</i>(<i>n</i> log <i>n</i>) time</li>\r\n        <li>Treesort</li>\r\n        <li>Heapsort</li>\r\n        <li>Divide and conquer algorithms (briefly)</li>\r\n        <li>Quicksort</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 11.2</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Su 6/1</td>\r\n    <td></td>\r\n    <td></td>\r\n    <td><a href=\"ProjectGuide/Project3\">Project #3</a> due 11:59pm</td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Week 10</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Tu 6/3</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Mergesort</li>\r\n        <li>A lower bound for comparison-based sorting</li>\r\n        <li>Modeling comparison-based sorts using decision trees</li>\r\n        <li>How to sort in linear time by using techniques other than comparisons</li>\r\n        <li>Counting sort</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 11.1</li>\r\n        <li>Ch. 11.3</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 6/5</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Radix sort</li>\r\n        <li>Why radix sort can run in linear time (i.e., linear with respect to what?)</li>\r\n        <li>Equivalence classses</li>\r\n        <li>The Union-Find algorithm</li>\r\n        <li>Parent-pointer-based trees as a Union-Find implementation technique</li>\r\n      </ul>\r\n    </td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li>Ch. 11.4</li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n  </tr>\r\n  <tr>\r\n    <td>Su 6/8</td>\r\n    <td></td>\r\n    <td></td>\r\n    <td><a href=\"ProjectGuide/Project4\">Project #4</a> due 11:59pm</td>\r\n  </tr>\r\n  <tr class=\"divider\">\r\n    <td colspan=\"5\">Finals Week</td>\r\n  </tr>\r\n  <tr>\r\n    <td>Th 6/12</td>\r\n    <td>\r\n      <ul class=\"nomarker\">\r\n        <li><b>FINAL EXAM: 4:00pm-6:00pm, DBH 1100</b></li>\r\n      </ul>\r\n    </td>\r\n    <td></td>\r\n    <td></td>\r\n  </tr>\r\n</table>\r\n\r\n</div>\r\n\r\n</body>\r\n</html>\r\n", "id": 16407.0}